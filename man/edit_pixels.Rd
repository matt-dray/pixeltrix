% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit.R
\name{edit_pixels}
\alias{edit_pixels}
\title{Interactive Pixel-Clicking Tool (User-Provided Matrix)}
\usage{
edit_pixels(m, n_states = NULL, grid = TRUE)
}
\arguments{
\item{m}{A matrix of integers. The maximum value is assumed to be the number
of pixel states desired. Override by supplying a 'n_states' value larger
than the maximum in the matrix.}

\item{n_states}{Integer. The number of states that a pixel can be. Click a
pixel to cycle through the states. See details.}

\item{grid}{Logical. Should a boundary line be placed around the pixels to
make them easier to differentiate? Defaults to TRUE.}
}
\value{
A matrix.
}
\description{
Opens an interactive plotting canvas with a grid of clickable squares
('pixels') that represent the cells of a matrix provided by the user,
ideally the output from \code{\link{click_pixels}}. Click the pixels in the
plotting window repeatedly to cycle through a number of 'states'. Successive
clicks increase the state value by 1 (wrapping back to 0) and make the pixel
a darker colour. Press the ESCAPE key to exit the interactive mode and be
returned a matrix that contains the state values of each pixel.
}
\details{
The pixel states are in a zero-indexed sequence, so
\code{n_states = 2} results in binary values of 0 and 1, while
\code{n_states = 4} would yield 0, 1, 2 and 3. Clicking a pixel increases
its state value by 1. Clicking a pixel with the maximum state value
will cycle it back to the lowest state value of 0.\preformatted{Pixel colours change from lightest to darkest as you click through
their states.

The numeric value for 'n_states', if provided, will coerced to integers.
}
}
\examples{
\dontrun{edit_pixels(m, 3, FALSE)}
}
